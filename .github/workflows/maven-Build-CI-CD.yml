# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  PROJECT_ID: productdatapipeline
  IMAGE_NAME: appimg
  TAG: ${{ github.sha }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: check out code 
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn package -DskipTests

    - name: Run unit tests
      run: mvn test
      
    - name: Run integration tests
      run:  mvn verify -P integration-test -Dtest=*IT  #specify the files wich end with'IT' to be run otherwise it runs even the unit test

  
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    #- name: Set up Google Cloud SDK
     # uses: google-github-actions/setup-gcloud@main
    - name: Setup gcloud auth
      uses: google-github-actions/auth@v1
      with:
       credentials_json: ${{ secrets.GCP_SA_KEY }}
        #project_id: ${{ secrets.GCP_PROJECT_ID }}
        #service_account_key: ${{ secrets.GCP_SA_KEY }}
    - name: Print environment variables
      run: printenv

    - name: Check secret value
      run: |
       echo "Printing contents ofproject id..."
       echo  ${{ secrets.GCP_PROJECT_ID  }}
       cat  ${{ secrets.GCP_PROJECT_ID  }}
       echo "Printed contents ofproject id..."
       echo "Printing contents of key file..."
       cat ${{ secrets.GCP_SA_KEY }}
       echo ${{ secrets.GCP_SA_KEY }}
       echo " End of Printing ..."

        
    - name: Authenticate with gcloud1
      run: |
       echo "Checking path to key file..."
       ls -l ${{ secrets.GCP_SA_KEY }}
       echo "Printing contents of key file..."
       cat ${{ secrets.GCP_SA_KEY }}
       echo "Activating service account..."
       gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}

       
    - name: Authenticate with gcloud2
      run: gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}  #activate the service account using the credentials stored in the secret.


    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-image:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-image:${{ github.sha }}
    


    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
